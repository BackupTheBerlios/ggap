#! /bin/sh

DEBUG=no

debug() {
  if [ "$DEBUG" != "yes" ]; then
    :
  elif [ -z "$current_func" ]; then
    echo "$@" > /dev/stderr
  else
    echo "$current_func: $@" > /dev/stderr
  fi
}

find_input() {
  current_func=find_input
  debug "dir: $1"
  if [ -f $1/Makefile.ug ]; then
    echo $1/Makefile.ug
    subdirs=`grep '\bSUBDIRS\b' $1/Makefile.ug`
    if [ -n "$subdirs" ]; then
      subdirs=`echo "$subdirs" | sed 's/SUBDIRS[ ]*=//'`
    fi
    debug "subdirs: $subdirs"
    if [ -n "$subdirs" ]; then
      for sd in $subdirs; do
        debug "going into: $1/$sd"
        find_input $1/$sd
      done
    fi
  fi
}

extract_var() {
  # extract_var Makefile NAME
  value=`grep '\b'$2'\b' $1`
  if [ -n "$value" ]; then
    value=`echo "$value" | sed 's/'$2'[ ]*=//'`
  fi
  value=`echo $value | tr -d " "`
  echo "$value"
}

write_mk() {
  # write_mk mk_mod MODULE
  echo ""
  echo "# begin $1.mk"
  cat mk/$1.mk | sed 's/@MODULE@/'$2'/g'
  echo ""
  echo 'UGLY_DEPS += $(top_srcdir)/mk/'$1'.mk'
  echo ""
  echo "# end $1.mk"
  echo ""
}

do_makefile() {
  current_func=do_makefile

  infile="$1"
  subdir=`dirname $infile | sed 's,^\./,,'`
  outbase=`basename $infile .ug`
  out=$subdir/$outbase.am

  if [ "$subdir" = . ]; then
    rel_topdir=.
    mk_prefix="mk"
  else
    rel_topdir=`echo $subdir | sed 's,[^/]*,..,g'`
    mk_prefix="$rel_topdir/mk"
  fi

  modname=`extract_var $infile MODULE | sed 's/\./_/g'`
  debug "processing $infile, output: $out, subdir: $subdir, topdir: $rel_topdir, module: $modname"

  cat > $out.tmp << _EOFEOF
#
# begin ugly stuff
#

include $mk_prefix/ugly-pre.mk

#
# end ugly stuff
#

_EOFEOF

  cat $infile >> $out.tmp || exit $?

  cat >> $out.tmp << _EOFEOF

#
# begin ugly stuff
#

_EOFEOF

  if [ "$subdir" = . ]; then
  cat >> $out.tmp << _EOFEOF
include $mk_prefix/ugly-top.mk
_EOFEOF
  fi

  mk_mods=
  if grep QT_QRC_FILES $infile > /dev/null 2>&1; then
    mk_mods="$mk_mods qrc"
  fi
  if grep QT_UI_FILES $infile > /dev/null 2>&1; then
    mk_mods="$mk_mods uic"
  fi
  if grep QT_MOC_HDRS $infile > /dev/null 2>&1; then
    mk_mods="$mk_mods moc"
  fi
  if grep PCH_HEADER $infile > /dev/null 2>&1; then
    mk_mods="$mk_mods pch"
  fi
  if grep -E 'YACC_FILES|YACC_PP_FILES' $infile > /dev/null 2>&1; then
    mk_mods="$mk_mods yacc"
  fi
  if grep RC_IN_FILES $infile > /dev/null 2>&1; then
    mk_mods="$mk_mods rc"
  fi

  for m in $mk_mods; do
    write_mk $m $modname >> $out.tmp
  done

  cat >> $out.tmp << _EOFEOF
include $mk_prefix/ugly-post.mk

#
# end ugly stuff
#
_EOFEOF

  mv $out.tmp $out || exit $?
}

if [ -z "$1" ]; then
  top_srcdir=.
  input=`find_input .`
else
  top_srcdir="$1"
  input="$2/Makefile.ug"
fi

cd $top_srcdir
for f in $input; do
  do_makefile "$f"
done
