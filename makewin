#!/usr/bin/env python

import os
import sys
import getopt

dir = os.getcwd()
builddir = "/home/muntyan/projects/ggap/build"

cygwin_builddir = builddir + "/cygwin/moo/moo/mooterm"
build_termhelper = True
termhelper_exe = cygwin_builddir + "/termhelper.exe"
# build_termhelper = False
# termhelper_exe = builddir + "/termhelper.exe"

ggap_windir = "/usr/local/win/ggap"
bin_only = False
py25 = True
py24 = False

def usage():
    print "Usage:", sys.argv[0], "[--termhelper=<BINARY>] [--python=(24|25|none)] [build_dir] [data_dir1] [data_dir2] [...]"
    sys.exit(2)

try:
    opts, args = getopt.getopt(sys.argv[1:], "", ["termhelper=", "bin-only", "python="])
except getopt.GetoptError:
    usage()

for o, a in opts:
    if o == "--termhelper":
        termhelper_exe = os.path.abspath(a)
        build_termhelper = False
    elif o == "--bin-only":
        bin_only = True
    elif o == "--python":
        py24 = False
        py25 = False
        if a == '25':
            py25 = True
        elif a == '24':
            py24 = True
        elif a == 'none':
            pass
        else:
            usage()
if args:
    ggap_builddir = os.path.abspath(args[0])
else:
    ggap_builddir = builddir + "/mingw"
if args[1:]:
    data_dirs = [os.path.abspath(s) for s in args[1:]]
else:
    data_dirs = []

config = os.path.basename(ggap_builddir)
installdir = "%s/%s-inst" % (dir, config)

issdir = "Z:%s/wininstaller" % (ggap_builddir,)
iss = issdir + "/ggap.iss"
installer = None


class Error(Exception):
    def __init__(self, status):
        Exception.__init__(self)
        self.status = status

def do_cmd(cmd):
    print cmd
    status = os.system(cmd)
    if status:
        raise Error(status)

def strip_files():
    strip = 'i586-mingw32msvc-strip --strip-unneeded'
    files = ['ggap.exe', 'pipehelper.exe', 'libmoo.dll']
    do_cmd(strip + ' ' + ' '.join(['%s/bin/%s' % (ggap_windir, f) for f in files]))
    if not bin_only and (py24 or py25):
        do_cmd("%s %s/lib/ggap/plugins/*/*.dll" % (strip, ggap_windir))
        do_cmd("%s %s/lib/ggap/plugins/*/*.pyd" % (strip, ggap_windir))

def copy_mime():
    do_cmd("mkdir -p %s/mime/packages" % (installdir,))
    do_cmd("cp %s/usr/local/share/mime/packages/moo.xml %s/mime/packages" % (installdir, installdir))
    do_cmd("cp /usr/share/mime/packages/freedesktop.org.xml %s/mime/packages" % (installdir,))
    do_cmd("update-mime-database %s/mime" % (installdir,))
    do_cmd("mkdir -p %s/share/mime/" % (ggap_windir,))
    do_cmd("cp %s/mime/mime.cache %s/share/mime/" % (installdir, ggap_windir))
    do_cmd("rm -fr %s/mime/" % (installdir,))

def copy_files():
    for d in data_dirs:
        do_cmd("cp -r %s/* %s/" % (d, ggap_windir))

    do_cmd("mkdir -p %s/bin" % (ggap_windir,))
    do_cmd("cp -r %s/usr/local/bin/ggap.exe %s/bin/" % (installdir, ggap_windir))
    do_cmd("cp -r %s/usr/local/bin/pipehelper.exe %s/bin/" % (installdir, ggap_windir))
    do_cmd("cp -r %s/usr/local/bin/libmoo.dll %s/bin/" % (installdir, ggap_windir))

    if not bin_only:
        do_cmd("mkdir -p %s/share" % (ggap_windir,))
        do_cmd("mkdir -p %s/lib/ggap" % (ggap_windir,))

        do_cmd("cp -r %s/usr/local/share/ggap %s/share/" % (installdir, ggap_windir))

        do_cmd("cp -r %s/usr/local/lib/ggap/plugins %s/lib/ggap/" % (installdir, ggap_windir))

        if py24:
            do_cmd("mkdir -p %s/lib/ggap/plugins/pymoo24" % (ggap_windir,))
            do_cmd("cp %s/usr/local/lib/pymoo24.dll %s/lib/ggap/plugins/pymoo24/pymoo.dll" % (installdir, ggap_windir))
            do_cmd("cp %s/usr/local/lib/moo24.pyd %s/lib/ggap/plugins/pymoo24/moo.pyd" % (installdir, ggap_windir))
        else:
            do_cmd("rm -f %s/lib/ggap/plugins/pymoo24.ini" % (ggap_windir,))
        if py25:
            do_cmd("mkdir -p %s/lib/ggap/plugins/pymoo25" % (ggap_windir,))
            do_cmd("cp %s/usr/local/lib/pymoo25.dll %s/lib/ggap/plugins/pymoo25/pymoo.dll" % (installdir, ggap_windir))
            do_cmd("cp %s/usr/local/lib/moo25.pyd %s/lib/ggap/plugins/pymoo25/moo.pyd" % (installdir, ggap_windir))
        else:
            do_cmd("rm -f %s/lib/ggap/plugins/pymoo25.ini" % (ggap_windir,))

        do_cmd("cp -r %s/usr/local/share/icons %s/share/" % (installdir, ggap_windir))
        do_cmd("mkdir -p %s/share/mime" % (ggap_windir,))
        copy_mime()

    strip_files()

def make_termhelper():
    if build_termhelper:
        os.chdir(cygwin_builddir)
        do_cmd("make")
        do_cmd("i686-pc-cygwin-strip " + termhelper_exe)
    do_cmd("cp %s %s/bin/" % (termhelper_exe, ggap_windir))


def get_version():
    sys.path.insert(0, ggap_builddir)
    import config
    return config.version

def build():
    do_cmd("mkdir " + ggap_windir)
    do_cmd("mkdir " + installdir)
    os.chdir(ggap_builddir)
    do_cmd("make install DESTDIR=" + installdir)
    copy_files()
    make_termhelper()
    do_cmd("wine /usr/local/win/InnoSetup5/ISCC.exe " + iss)
    global installer
    installer = "ggapsetup-" + get_version() + ".exe"
    do_cmd("mv %s/wininstaller/Output/setup.exe %s/%s" % (ggap_builddir, dir, installer))

def clean():
    do_cmd("rm -rf %s %s %s" % (ggap_windir, installdir,
                                ggap_builddir + "/wininstaller/Output"))

try:
    build()
except Error, e:
    clean()
    sys.exit(e.status)

clean()
print "*** Success ***"
print "*** Output file is: %s ***" % (installer,)
