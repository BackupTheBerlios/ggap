#############################################################################
##
#W  types.gi                   ggap package                    Yevgen Muntyan
#W
#Y  Copyright (C) 2004-2006 by Yevgen Muntyan <muntyan@math.tamu.edu>
##
##  This program is free software; you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation; either version 2 of the License, or
##  (at your option) any later version.
##
##  See COPYING file that comes with this distribution.
##

## This file is autogenerated

BindGlobal("GTK_ACCEL_VISIBLE", 1);
BindGlobal("GTK_ACCEL_LOCKED", 2);
BindGlobal("GTK_ACCEL_MASK", 7);
BindGlobal("GTK_ANCHOR_CENTER", 0);
BindGlobal("GTK_ANCHOR_N", 1);
BindGlobal("GTK_ANCHOR_NORTH", 1);
BindGlobal("GTK_ANCHOR_NORTH_WEST", 2);
BindGlobal("GTK_ANCHOR_NW", 2);
BindGlobal("GTK_ANCHOR_NE", 3);
BindGlobal("GTK_ANCHOR_NORTH_EAST", 3);
BindGlobal("GTK_ANCHOR_S", 4);
BindGlobal("GTK_ANCHOR_SOUTH", 4);
BindGlobal("GTK_ANCHOR_SOUTH_WEST", 5);
BindGlobal("GTK_ANCHOR_SW", 5);
BindGlobal("GTK_ANCHOR_SE", 6);
BindGlobal("GTK_ANCHOR_SOUTH_EAST", 6);
BindGlobal("GTK_ANCHOR_W", 7);
BindGlobal("GTK_ANCHOR_WEST", 7);
BindGlobal("GTK_ANCHOR_E", 8);
BindGlobal("GTK_ANCHOR_EAST", 8);
BindGlobal("GTK_ARROW_UP", 0);
BindGlobal("GTK_ARROW_DOWN", 1);
BindGlobal("GTK_ARROW_LEFT", 2);
BindGlobal("GTK_ARROW_RIGHT", 3);
BindGlobal("GTK_ARROW_NONE", 4);
BindGlobal("GTK_ASSISTANT_PAGE_CONTENT", 0);
BindGlobal("GTK_ASSISTANT_PAGE_INTRO", 1);
BindGlobal("GTK_ASSISTANT_PAGE_CONFIRM", 2);
BindGlobal("GTK_ASSISTANT_PAGE_SUMMARY", 3);
BindGlobal("GTK_ASSISTANT_PAGE_PROGRESS", 4);
BindGlobal("GTK_EXPAND", 1);
BindGlobal("GTK_SHRINK", 2);
BindGlobal("GTK_FILL", 4);
BindGlobal("GTK_BUTTONBOX_DEFAULT_STYLE", 0);
BindGlobal("GTK_BUTTONBOX_SPREAD", 1);
BindGlobal("GTK_BUTTONBOX_EDGE", 2);
BindGlobal("GTK_BUTTONBOX_START", 3);
BindGlobal("GTK_BUTTONBOX_END", 4);
BindGlobal("GTK_BUTTONS_NONE", 0);
BindGlobal("GTK_BUTTONS_OK", 1);
BindGlobal("GTK_BUTTONS_CLOSE", 2);
BindGlobal("GTK_BUTTONS_CANCEL", 3);
BindGlobal("GTK_BUTTONS_YES_NO", 4);
BindGlobal("GTK_BUTTONS_OK_CANCEL", 5);
BindGlobal("GTK_CALENDAR_SHOW_HEADING", 1);
BindGlobal("GTK_CALENDAR_SHOW_DAY_NAMES", 2);
BindGlobal("GTK_CALENDAR_NO_MONTH_CHANGE", 4);
BindGlobal("GTK_CALENDAR_SHOW_WEEK_NUMBERS", 8);
BindGlobal("GTK_CALENDAR_WEEK_START_MONDAY", 16);
BindGlobal("GTK_CELL_RENDERER_ACCEL_MODE_GTK", 0);
BindGlobal("GTK_CELL_RENDERER_ACCEL_MODE_OTHER", 1);
BindGlobal("GTK_CELL_RENDERER_MODE_INERT", 0);
BindGlobal("GTK_CELL_RENDERER_MODE_ACTIVATABLE", 1);
BindGlobal("GTK_CELL_RENDERER_MODE_EDITABLE", 2);
BindGlobal("GTK_CELL_RENDERER_SELECTED", 1);
BindGlobal("GTK_CELL_RENDERER_PRELIT", 2);
BindGlobal("GTK_CELL_RENDERER_INSENSITIVE", 4);
BindGlobal("GTK_CELL_RENDERER_SORTED", 8);
BindGlobal("GTK_CELL_RENDERER_FOCUSED", 16);
BindGlobal("GTK_CORNER_TOP_LEFT", 0);
BindGlobal("GTK_CORNER_BOTTOM_LEFT", 1);
BindGlobal("GTK_CORNER_TOP_RIGHT", 2);
BindGlobal("GTK_CORNER_BOTTOM_RIGHT", 3);
BindGlobal("GTK_CURVE_TYPE_LINEAR", 0);
BindGlobal("GTK_CURVE_TYPE_SPLINE", 1);
BindGlobal("GTK_CURVE_TYPE_FREE", 2);
BindGlobal("GTK_DELETE_CHARS", 0);
BindGlobal("GTK_DELETE_WORD_ENDS", 1);
BindGlobal("GTK_DELETE_WORDS", 2);
BindGlobal("GTK_DELETE_DISPLAY_LINES", 3);
BindGlobal("GTK_DELETE_DISPLAY_LINE_ENDS", 4);
BindGlobal("GTK_DELETE_PARAGRAPH_ENDS", 5);
BindGlobal("GTK_DELETE_PARAGRAPHS", 6);
BindGlobal("GTK_DELETE_WHITESPACE", 7);
BindGlobal("GTK_DEST_DEFAULT_MOTION", 1);
BindGlobal("GTK_DEST_DEFAULT_HIGHLIGHT", 2);
BindGlobal("GTK_DEST_DEFAULT_DROP", 4);
BindGlobal("GTK_DEST_DEFAULT_ALL", 7);
BindGlobal("GTK_DIALOG_MODAL", 1);
BindGlobal("GTK_DIALOG_DESTROY_WITH_PARENT", 2);
BindGlobal("GTK_DIALOG_NO_SEPARATOR", 4);
BindGlobal("GTK_DIR_TAB_FORWARD", 0);
BindGlobal("GTK_DIR_TAB_BACKWARD", 1);
BindGlobal("GTK_DIR_UP", 2);
BindGlobal("GTK_DIR_DOWN", 3);
BindGlobal("GTK_DIR_LEFT", 4);
BindGlobal("GTK_DIR_RIGHT", 5);
BindGlobal("GTK_EXPANDER_COLLAPSED", 0);
BindGlobal("GTK_EXPANDER_SEMI_COLLAPSED", 1);
BindGlobal("GTK_EXPANDER_SEMI_EXPANDED", 2);
BindGlobal("GTK_EXPANDER_EXPANDED", 3);
BindGlobal("GTK_FILE_CHOOSER_ACTION_OPEN", 0);
BindGlobal("GTK_FILE_CHOOSER_ACTION_SAVE", 1);
BindGlobal("GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER", 2);
BindGlobal("GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER", 3);
BindGlobal("GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM", 0);
BindGlobal("GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME", 1);
BindGlobal("GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN", 2);
BindGlobal("GTK_FILE_CHOOSER_ERROR_NONEXISTENT", 0);
BindGlobal("GTK_FILE_CHOOSER_ERROR_BAD_FILENAME", 1);
BindGlobal("GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS", 2);
BindGlobal("GTK_FILE_FILTER_FILENAME", 1);
BindGlobal("GTK_FILE_FILTER_URI", 2);
BindGlobal("GTK_FILE_FILTER_DISPLAY_NAME", 4);
BindGlobal("GTK_FILE_FILTER_MIME_TYPE", 8);
BindGlobal("GTK_IM_PREEDIT_NOTHING", 0);
BindGlobal("GTK_IM_PREEDIT_CALLBACK", 1);
BindGlobal("GTK_IM_PREEDIT_NONE", 2);
BindGlobal("GTK_IM_STATUS_NOTHING", 0);
BindGlobal("GTK_IM_STATUS_CALLBACK", 1);
BindGlobal("GTK_IM_STATUS_NONE", 2);
BindGlobal("GTK_ICON_LOOKUP_NO_SVG", 1);
BindGlobal("GTK_ICON_LOOKUP_FORCE_SVG", 2);
BindGlobal("GTK_ICON_LOOKUP_USE_BUILTIN", 4);
BindGlobal("GTK_ICON_SIZE_INVALID", 0);
BindGlobal("GTK_ICON_SIZE_MENU", 1);
BindGlobal("GTK_ICON_SIZE_SMALL_TOOLBAR", 2);
BindGlobal("GTK_ICON_SIZE_LARGE_TOOLBAR", 3);
BindGlobal("GTK_ICON_SIZE_BUTTON", 4);
BindGlobal("GTK_ICON_SIZE_DND", 5);
BindGlobal("GTK_ICON_SIZE_DIALOG", 6);
BindGlobal("GTK_ICON_THEME_NOT_FOUND", 0);
BindGlobal("GTK_ICON_THEME_FAILED", 1);
BindGlobal("GTK_ICON_VIEW_NO_DROP", 0);
BindGlobal("GTK_ICON_VIEW_DROP_INTO", 1);
BindGlobal("GTK_ICON_VIEW_DROP_LEFT", 2);
BindGlobal("GTK_ICON_VIEW_DROP_RIGHT", 3);
BindGlobal("GTK_ICON_VIEW_DROP_ABOVE", 4);
BindGlobal("GTK_ICON_VIEW_DROP_BELOW", 5);
BindGlobal("GTK_IMAGE_EMPTY", 0);
BindGlobal("GTK_IMAGE_PIXMAP", 1);
BindGlobal("GTK_IMAGE_IMAGE", 2);
BindGlobal("GTK_IMAGE_PIXBUF", 3);
BindGlobal("GTK_IMAGE_STOCK", 4);
BindGlobal("GTK_IMAGE_ICON_SET", 5);
BindGlobal("GTK_IMAGE_ANIMATION", 6);
BindGlobal("GTK_IMAGE_ICON_NAME", 7);
BindGlobal("GTK_JUSTIFY_LEFT", 0);
BindGlobal("GTK_JUSTIFY_RIGHT", 1);
BindGlobal("GTK_JUSTIFY_CENTER", 2);
BindGlobal("GTK_JUSTIFY_FILL", 3);
BindGlobal("GTK_MENU_DIR_PARENT", 0);
BindGlobal("GTK_MENU_DIR_CHILD", 1);
BindGlobal("GTK_MENU_DIR_NEXT", 2);
BindGlobal("GTK_MENU_DIR_PREV", 3);
BindGlobal("GTK_MESSAGE_INFO", 0);
BindGlobal("GTK_MESSAGE_WARNING", 1);
BindGlobal("GTK_MESSAGE_QUESTION", 2);
BindGlobal("GTK_MESSAGE_ERROR", 3);
BindGlobal("GTK_MESSAGE_OTHER", 4);
BindGlobal("GTK_PIXELS", 0);
BindGlobal("GTK_INCHES", 1);
BindGlobal("GTK_CENTIMETERS", 2);
BindGlobal("GTK_MOVEMENT_LOGICAL_POSITIONS", 0);
BindGlobal("GTK_MOVEMENT_VISUAL_POSITIONS", 1);
BindGlobal("GTK_MOVEMENT_WORDS", 2);
BindGlobal("GTK_MOVEMENT_DISPLAY_LINES", 3);
BindGlobal("GTK_MOVEMENT_DISPLAY_LINE_ENDS", 4);
BindGlobal("GTK_MOVEMENT_PARAGRAPHS", 5);
BindGlobal("GTK_MOVEMENT_PARAGRAPH_ENDS", 6);
BindGlobal("GTK_MOVEMENT_PAGES", 7);
BindGlobal("GTK_MOVEMENT_BUFFER_ENDS", 8);
BindGlobal("GTK_MOVEMENT_HORIZONTAL_PAGES", 9);
BindGlobal("GTK_NOTEBOOK_TAB_FIRST", 0);
BindGlobal("GTK_NOTEBOOK_TAB_LAST", 1);
BindGlobal("GTK_IN_DESTRUCTION", 1);
BindGlobal("GTK_FLOATING", 2);
BindGlobal("GTK_RESERVED_1", 4);
BindGlobal("GTK_RESERVED_2", 8);
BindGlobal("GTK_ORIENTATION_HORIZONTAL", 0);
BindGlobal("GTK_ORIENTATION_VERTICAL", 1);
BindGlobal("GTK_PACK_DIRECTION_LTR", 0);
BindGlobal("GTK_PACK_DIRECTION_RTL", 1);
BindGlobal("GTK_PACK_DIRECTION_TTB", 2);
BindGlobal("GTK_PACK_DIRECTION_BTT", 3);
BindGlobal("GTK_PACK_START", 0);
BindGlobal("GTK_PACK_END", 1);
BindGlobal("GTK_PAGE_ORIENTATION_PORTRAIT", 0);
BindGlobal("GTK_PAGE_ORIENTATION_LANDSCAPE", 1);
BindGlobal("GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT", 2);
BindGlobal("GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE", 3);
BindGlobal("GTK_PAGE_SET_ALL", 0);
BindGlobal("GTK_PAGE_SET_EVEN", 1);
BindGlobal("GTK_PAGE_SET_ODD", 2);
BindGlobal("GTK_PATH_PRIO_LOWEST", 0);
BindGlobal("GTK_PATH_PRIO_GTK", 4);
BindGlobal("GTK_PATH_PRIO_APPLICATION", 8);
BindGlobal("GTK_PATH_PRIO_THEME", 10);
BindGlobal("GTK_PATH_PRIO_RC", 12);
BindGlobal("GTK_PATH_PRIO_HIGHEST", 15);
BindGlobal("GTK_PATH_WIDGET", 0);
BindGlobal("GTK_PATH_WIDGET_CLASS", 1);
BindGlobal("GTK_PATH_CLASS", 2);
BindGlobal("GTK_POLICY_ALWAYS", 0);
BindGlobal("GTK_POLICY_AUTOMATIC", 1);
BindGlobal("GTK_POLICY_NEVER", 2);
BindGlobal("GTK_POS_LEFT", 0);
BindGlobal("GTK_POS_RIGHT", 1);
BindGlobal("GTK_POS_TOP", 2);
BindGlobal("GTK_POS_BOTTOM", 3);
BindGlobal("GTK_PRINT_DUPLEX_SIMPLEX", 0);
BindGlobal("GTK_PRINT_DUPLEX_HORIZONTAL", 1);
BindGlobal("GTK_PRINT_DUPLEX_VERTICAL", 2);
BindGlobal("GTK_PRINT_ERROR_GENERAL", 0);
BindGlobal("GTK_PRINT_ERROR_INTERNAL_ERROR", 1);
BindGlobal("GTK_PRINT_ERROR_NOMEM", 2);
BindGlobal("GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG", 0);
BindGlobal("GTK_PRINT_OPERATION_ACTION_PRINT", 1);
BindGlobal("GTK_PRINT_OPERATION_ACTION_PREVIEW", 2);
BindGlobal("GTK_PRINT_OPERATION_ACTION_EXPORT", 3);
BindGlobal("GTK_PRINT_OPERATION_RESULT_ERROR", 0);
BindGlobal("GTK_PRINT_OPERATION_RESULT_APPLY", 1);
BindGlobal("GTK_PRINT_OPERATION_RESULT_CANCEL", 2);
BindGlobal("GTK_PRINT_OPERATION_RESULT_IN_PROGRESS", 3);
BindGlobal("GTK_PRINT_PAGES_ALL", 0);
BindGlobal("GTK_PRINT_PAGES_CURRENT", 1);
BindGlobal("GTK_PRINT_PAGES_RANGES", 2);
BindGlobal("GTK_PRINT_QUALITY_LOW", 0);
BindGlobal("GTK_PRINT_QUALITY_NORMAL", 1);
BindGlobal("GTK_PRINT_QUALITY_HIGH", 2);
BindGlobal("GTK_PRINT_QUALITY_DRAFT", 3);
BindGlobal("GTK_PRINT_STATUS_INITIAL", 0);
BindGlobal("GTK_PRINT_STATUS_PREPARING", 1);
BindGlobal("GTK_PRINT_STATUS_GENERATING_DATA", 2);
BindGlobal("GTK_PRINT_STATUS_SENDING_DATA", 3);
BindGlobal("GTK_PRINT_STATUS_PENDING", 4);
BindGlobal("GTK_PRINT_STATUS_PENDING_ISSUE", 5);
BindGlobal("GTK_PRINT_STATUS_PRINTING", 6);
BindGlobal("GTK_PRINT_STATUS_FINISHED", 7);
BindGlobal("GTK_PRINT_STATUS_FINISHED_ABORTED", 8);
BindGlobal("GTK_PROGRESS_LEFT_TO_RIGHT", 0);
BindGlobal("GTK_PROGRESS_RIGHT_TO_LEFT", 1);
BindGlobal("GTK_PROGRESS_BOTTOM_TO_TOP", 2);
BindGlobal("GTK_PROGRESS_TOP_TO_BOTTOM", 3);
BindGlobal("GTK_PROGRESS_CONTINUOUS", 0);
BindGlobal("GTK_PROGRESS_DISCRETE", 1);
BindGlobal("GTK_RC_FG", 1);
BindGlobal("GTK_RC_BG", 2);
BindGlobal("GTK_RC_TEXT", 4);
BindGlobal("GTK_RC_BASE", 8);
BindGlobal("GTK_RC_TOKEN_INVALID", 270);
BindGlobal("GTK_RC_TOKEN_INCLUDE", 271);
BindGlobal("GTK_RC_TOKEN_NORMAL", 272);
BindGlobal("GTK_RC_TOKEN_ACTIVE", 273);
BindGlobal("GTK_RC_TOKEN_PRELIGHT", 274);
BindGlobal("GTK_RC_TOKEN_SELECTED", 275);
BindGlobal("GTK_RC_TOKEN_INSENSITIVE", 276);
BindGlobal("GTK_RC_TOKEN_FG", 277);
BindGlobal("GTK_RC_TOKEN_BG", 278);
BindGlobal("GTK_RC_TOKEN_TEXT", 279);
BindGlobal("GTK_RC_TOKEN_BASE", 280);
BindGlobal("GTK_RC_TOKEN_XTHICKNESS", 281);
BindGlobal("GTK_RC_TOKEN_YTHICKNESS", 282);
BindGlobal("GTK_RC_TOKEN_FONT", 283);
BindGlobal("GTK_RC_TOKEN_FONTSET", 284);
BindGlobal("GTK_RC_TOKEN_FONT_NAME", 285);
BindGlobal("GTK_RC_TOKEN_BG_PIXMAP", 286);
BindGlobal("GTK_RC_TOKEN_PIXMAP_PATH", 287);
BindGlobal("GTK_RC_TOKEN_STYLE", 288);
BindGlobal("GTK_RC_TOKEN_BINDING", 289);
BindGlobal("GTK_RC_TOKEN_BIND", 290);
BindGlobal("GTK_RC_TOKEN_WIDGET", 291);
BindGlobal("GTK_RC_TOKEN_WIDGET_CLASS", 292);
BindGlobal("GTK_RC_TOKEN_CLASS", 293);
BindGlobal("GTK_RC_TOKEN_LOWEST", 294);
BindGlobal("GTK_RC_TOKEN_GTK", 295);
BindGlobal("GTK_RC_TOKEN_APPLICATION", 296);
BindGlobal("GTK_RC_TOKEN_THEME", 297);
BindGlobal("GTK_RC_TOKEN_RC", 298);
BindGlobal("GTK_RC_TOKEN_HIGHEST", 299);
BindGlobal("GTK_RC_TOKEN_ENGINE", 300);
BindGlobal("GTK_RC_TOKEN_MODULE_PATH", 301);
BindGlobal("GTK_RC_TOKEN_IM_MODULE_PATH", 302);
BindGlobal("GTK_RC_TOKEN_IM_MODULE_FILE", 303);
BindGlobal("GTK_RC_TOKEN_STOCK", 304);
BindGlobal("GTK_RC_TOKEN_LTR", 305);
BindGlobal("GTK_RC_TOKEN_RTL", 306);
BindGlobal("GTK_RC_TOKEN_COLOR", 307);
BindGlobal("GTK_RC_TOKEN_UNBIND", 308);
BindGlobal("GTK_RC_TOKEN_LAST", 309);
BindGlobal("GTK_RECENT_CHOOSER_ERROR_NOT_FOUND", 0);
BindGlobal("GTK_RECENT_CHOOSER_ERROR_INVALID_URI", 1);
BindGlobal("GTK_RECENT_FILTER_URI", 1);
BindGlobal("GTK_RECENT_FILTER_DISPLAY_NAME", 2);
BindGlobal("GTK_RECENT_FILTER_MIME_TYPE", 4);
BindGlobal("GTK_RECENT_FILTER_APPLICATION", 8);
BindGlobal("GTK_RECENT_FILTER_GROUP", 16);
BindGlobal("GTK_RECENT_FILTER_AGE", 32);
BindGlobal("GTK_RECENT_MANAGER_ERROR_NOT_FOUND", 0);
BindGlobal("GTK_RECENT_MANAGER_ERROR_INVALID_URI", 1);
BindGlobal("GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING", 2);
BindGlobal("GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED", 3);
BindGlobal("GTK_RECENT_MANAGER_ERROR_READ", 4);
BindGlobal("GTK_RECENT_MANAGER_ERROR_WRITE", 5);
BindGlobal("GTK_RECENT_MANAGER_ERROR_UNKNOWN", 6);
BindGlobal("GTK_RECENT_SORT_NONE", 0);
BindGlobal("GTK_RECENT_SORT_MRU", 1);
BindGlobal("GTK_RECENT_SORT_LRU", 2);
BindGlobal("GTK_RECENT_SORT_CUSTOM", 3);
BindGlobal("GTK_RELIEF_NORMAL", 0);
BindGlobal("GTK_RELIEF_HALF", 1);
BindGlobal("GTK_RELIEF_NONE", 2);
BindGlobal("GTK_RESIZE_PARENT", 0);
BindGlobal("GTK_RESIZE_QUEUE", 1);
BindGlobal("GTK_RESIZE_IMMEDIATE", 2);
BindGlobal("GTK_RESPONSE_HELP", -11);
BindGlobal("GTK_RESPONSE_APPLY", -10);
BindGlobal("GTK_RESPONSE_NO", -9);
BindGlobal("GTK_RESPONSE_YES", -8);
BindGlobal("GTK_RESPONSE_CLOSE", -7);
BindGlobal("GTK_RESPONSE_CANCEL", -6);
BindGlobal("GTK_RESPONSE_OK", -5);
BindGlobal("GTK_RESPONSE_DELETE_EVENT", -4);
BindGlobal("GTK_RESPONSE_ACCEPT", -3);
BindGlobal("GTK_RESPONSE_REJECT", -2);
BindGlobal("GTK_RESPONSE_NONE", -1);
BindGlobal("GTK_SCROLL_STEPS", 0);
BindGlobal("GTK_SCROLL_PAGES", 1);
BindGlobal("GTK_SCROLL_ENDS", 2);
BindGlobal("GTK_SCROLL_HORIZONTAL_STEPS", 3);
BindGlobal("GTK_SCROLL_HORIZONTAL_PAGES", 4);
BindGlobal("GTK_SCROLL_HORIZONTAL_ENDS", 5);
BindGlobal("GTK_SCROLL_NONE", 0);
BindGlobal("GTK_SCROLL_JUMP", 1);
BindGlobal("GTK_SCROLL_STEP_BACKWARD", 2);
BindGlobal("GTK_SCROLL_STEP_FORWARD", 3);
BindGlobal("GTK_SCROLL_PAGE_BACKWARD", 4);
BindGlobal("GTK_SCROLL_PAGE_FORWARD", 5);
BindGlobal("GTK_SCROLL_STEP_UP", 6);
BindGlobal("GTK_SCROLL_STEP_DOWN", 7);
BindGlobal("GTK_SCROLL_PAGE_UP", 8);
BindGlobal("GTK_SCROLL_PAGE_DOWN", 9);
BindGlobal("GTK_SCROLL_STEP_LEFT", 10);
BindGlobal("GTK_SCROLL_STEP_RIGHT", 11);
BindGlobal("GTK_SCROLL_PAGE_LEFT", 12);
BindGlobal("GTK_SCROLL_PAGE_RIGHT", 13);
BindGlobal("GTK_SCROLL_START", 14);
BindGlobal("GTK_SCROLL_END", 15);
BindGlobal("GTK_SELECTION_NONE", 0);
BindGlobal("GTK_SELECTION_SINGLE", 1);
BindGlobal("GTK_SELECTION_BROWSE", 2);
BindGlobal("GTK_SELECTION_EXTENDED", 3);
BindGlobal("GTK_SELECTION_MULTIPLE", 3);
BindGlobal("GTK_SENSITIVITY_AUTO", 0);
BindGlobal("GTK_SENSITIVITY_ON", 1);
BindGlobal("GTK_SENSITIVITY_OFF", 2);
BindGlobal("GTK_SHADOW_NONE", 0);
BindGlobal("GTK_SHADOW_IN", 1);
BindGlobal("GTK_SHADOW_OUT", 2);
BindGlobal("GTK_SHADOW_ETCHED_IN", 3);
BindGlobal("GTK_SHADOW_ETCHED_OUT", 4);
BindGlobal("GTK_SIZE_GROUP_NONE", 0);
BindGlobal("GTK_SIZE_GROUP_HORIZONTAL", 1);
BindGlobal("GTK_SIZE_GROUP_VERTICAL", 2);
BindGlobal("GTK_SIZE_GROUP_BOTH", 3);
BindGlobal("GTK_SORT_ASCENDING", 0);
BindGlobal("GTK_SORT_DESCENDING", 1);
BindGlobal("GTK_UPDATE_ALWAYS", 0);
BindGlobal("GTK_UPDATE_IF_VALID", 1);
BindGlobal("GTK_SPIN_STEP_FORWARD", 0);
BindGlobal("GTK_SPIN_STEP_BACKWARD", 1);
BindGlobal("GTK_SPIN_PAGE_FORWARD", 2);
BindGlobal("GTK_SPIN_PAGE_BACKWARD", 3);
BindGlobal("GTK_SPIN_HOME", 4);
BindGlobal("GTK_SPIN_END", 5);
BindGlobal("GTK_SPIN_USER_DEFINED", 6);
BindGlobal("GTK_STATE_NORMAL", 0);
BindGlobal("GTK_STATE_ACTIVE", 1);
BindGlobal("GTK_STATE_PRELIGHT", 2);
BindGlobal("GTK_STATE_SELECTED", 3);
BindGlobal("GTK_STATE_INSENSITIVE", 4);
BindGlobal("GTK_TARGET_SAME_APP", 1);
BindGlobal("GTK_TARGET_SAME_WIDGET", 2);
BindGlobal("GTK_TEXT_BUFFER_TARGET_INFO_TEXT", -3);
BindGlobal("GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT", -2);
BindGlobal("GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS", -1);
BindGlobal("GTK_TEXT_DIR_NONE", 0);
BindGlobal("GTK_TEXT_DIR_LTR", 1);
BindGlobal("GTK_TEXT_DIR_RTL", 2);
BindGlobal("GTK_TEXT_SEARCH_VISIBLE_ONLY", 1);
BindGlobal("GTK_TEXT_SEARCH_TEXT_ONLY", 2);
BindGlobal("GTK_TEXT_WINDOW_PRIVATE", 0);
BindGlobal("GTK_TEXT_WINDOW_WIDGET", 1);
BindGlobal("GTK_TEXT_WINDOW_TEXT", 2);
BindGlobal("GTK_TEXT_WINDOW_LEFT", 3);
BindGlobal("GTK_TEXT_WINDOW_RIGHT", 4);
BindGlobal("GTK_TEXT_WINDOW_TOP", 5);
BindGlobal("GTK_TEXT_WINDOW_BOTTOM", 6);
BindGlobal("GTK_TOOLBAR_CHILD_SPACE", 0);
BindGlobal("GTK_TOOLBAR_CHILD_BUTTON", 1);
BindGlobal("GTK_TOOLBAR_CHILD_TOGGLEBUTTON", 2);
BindGlobal("GTK_TOOLBAR_CHILD_RADIOBUTTON", 3);
BindGlobal("GTK_TOOLBAR_CHILD_WIDGET", 4);
BindGlobal("GTK_TOOLBAR_SPACE_EMPTY", 0);
BindGlobal("GTK_TOOLBAR_SPACE_LINE", 1);
BindGlobal("GTK_TOOLBAR_ICONS", 0);
BindGlobal("GTK_TOOLBAR_TEXT", 1);
BindGlobal("GTK_TOOLBAR_BOTH", 2);
BindGlobal("GTK_TOOLBAR_BOTH_HORIZ", 3);
BindGlobal("GTK_TREE_MODEL_ITERS_PERSIST", 1);
BindGlobal("GTK_TREE_MODEL_LIST_ONLY", 2);
BindGlobal("GTK_TREE_VIEW_COLUMN_GROW_ONLY", 0);
BindGlobal("GTK_TREE_VIEW_COLUMN_AUTOSIZE", 1);
BindGlobal("GTK_TREE_VIEW_COLUMN_FIXED", 2);
BindGlobal("GTK_TREE_VIEW_DROP_BEFORE", 0);
BindGlobal("GTK_TREE_VIEW_DROP_AFTER", 1);
BindGlobal("GTK_TREE_VIEW_DROP_INTO_OR_BEFORE", 2);
BindGlobal("GTK_TREE_VIEW_DROP_INTO_OR_AFTER", 3);
BindGlobal("GTK_TREE_VIEW_GRID_LINES_NONE", 0);
BindGlobal("GTK_TREE_VIEW_GRID_LINES_HORIZONTAL", 1);
BindGlobal("GTK_TREE_VIEW_GRID_LINES_VERTICAL", 2);
BindGlobal("GTK_TREE_VIEW_GRID_LINES_BOTH", 3);
BindGlobal("GTK_TREE_VIEW_LINE", 0);
BindGlobal("GTK_TREE_VIEW_ITEM", 1);
BindGlobal("GTK_UI_MANAGER_AUTO", 0);
BindGlobal("GTK_UI_MANAGER_MENUBAR", 1);
BindGlobal("GTK_UI_MANAGER_MENU", 2);
BindGlobal("GTK_UI_MANAGER_TOOLBAR", 4);
BindGlobal("GTK_UI_MANAGER_PLACEHOLDER", 8);
BindGlobal("GTK_UI_MANAGER_POPUP", 16);
BindGlobal("GTK_UI_MANAGER_MENUITEM", 32);
BindGlobal("GTK_UI_MANAGER_TOOLITEM", 64);
BindGlobal("GTK_UI_MANAGER_SEPARATOR", 128);
BindGlobal("GTK_UI_MANAGER_ACCELERATOR", 256);
BindGlobal("GTK_UNIT_PIXEL", 0);
BindGlobal("GTK_UNIT_POINTS", 1);
BindGlobal("GTK_UNIT_INCH", 2);
BindGlobal("GTK_UNIT_MM", 3);
BindGlobal("GTK_UPDATE_CONTINUOUS", 0);
BindGlobal("GTK_UPDATE_DISCONTINUOUS", 1);
BindGlobal("GTK_UPDATE_DELAYED", 2);
BindGlobal("GTK_VISIBILITY_NONE", 0);
BindGlobal("GTK_VISIBILITY_PARTIAL", 1);
BindGlobal("GTK_VISIBILITY_FULL", 2);
BindGlobal("GTK_TOPLEVEL", 16);
BindGlobal("GTK_NO_WINDOW", 32);
BindGlobal("GTK_REALIZED", 64);
BindGlobal("GTK_MAPPED", 128);
BindGlobal("GTK_VISIBLE", 256);
BindGlobal("GTK_SENSITIVE", 512);
BindGlobal("GTK_PARENT_SENSITIVE", 1024);
BindGlobal("GTK_CAN_FOCUS", 2048);
BindGlobal("GTK_HAS_FOCUS", 4096);
BindGlobal("GTK_CAN_DEFAULT", 8192);
BindGlobal("GTK_HAS_DEFAULT", 16384);
BindGlobal("GTK_HAS_GRAB", 32768);
BindGlobal("GTK_RC_STYLE", 65536);
BindGlobal("GTK_COMPOSITE_CHILD", 131072);
BindGlobal("GTK_NO_REPARENT", 262144);
BindGlobal("GTK_APP_PAINTABLE", 524288);
BindGlobal("GTK_RECEIVES_DEFAULT", 1048576);
BindGlobal("GTK_DOUBLE_BUFFERED", 2097152);
BindGlobal("GTK_NO_SHOW_ALL", 4194304);
BindGlobal("GTK_WIDGET_HELP_TOOLTIP", 0);
BindGlobal("GTK_WIDGET_HELP_WHATS_THIS", 1);
BindGlobal("GTK_WIN_POS_NONE", 0);
BindGlobal("GTK_WIN_POS_CENTER", 1);
BindGlobal("GTK_WIN_POS_MOUSE", 2);
BindGlobal("GTK_WIN_POS_CENTER_ALWAYS", 3);
BindGlobal("GTK_WIN_POS_CENTER_ON_PARENT", 4);
BindGlobal("GTK_WINDOW_TOPLEVEL", 0);
BindGlobal("GTK_WINDOW_POPUP", 1);
BindGlobal("GTK_WRAP_NONE", 0);
BindGlobal("GTK_WRAP_CHAR", 1);
BindGlobal("GTK_WRAP_WORD", 2);
BindGlobal("GTK_WRAP_WORD_CHAR", 3);

InstallMethod(GetProperty, [IsGObject, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "get_property", arg1);
end);
InstallMethod(SetProperty, [IsGObject, IsString, IsObject],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_property", arg1, arg2);
end);
InstallMethod(MooGladeXML, [IsString],
function(arg1)
    return _GGAP_CALL_FUNC("moo.utils.GladeXML", arg1);
end);
InstallMethod(MooGladeXML, [IsString, IsString],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("moo.utils.GladeXML", arg1, arg2);
end);
InstallMethod(MooGladeXML, [IsString, IsRecord],
function(arg1, optarg)
    return _GGAP_CALL_FUNC_OPTARG("moo.utils.GladeXML", arg1, optarg);
end);
InstallMethod(Destroy, [IsGtkObject],
function(self)
    return _GGAP_CALL_METH(self, "destroy");
end);
InstallMethod(GetDisplay, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_display");
end);
InstallMethod(Unparent, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "unparent");
end);
InstallMethod(Activate, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "activate");
end);
InstallMethod(GrabDefault, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "grab_default");
end);
InstallMethod(Show, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "show");
end);
InstallMethod(QueueDraw, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "queue_draw");
end);
InstallMethod(SetState, [IsGtkWidget, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_state", arg1);
end);
InstallMethod(QueueResize, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "queue_resize");
end);
InstallMethod(GetToplevel, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_toplevel");
end);
InstallMethod(IsFocus, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "is_focus");
end);
InstallMethod(EnsureStyle, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "ensure_style");
end);
InstallMethod(ResetRcStyles, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "reset_rc_styles");
end);
InstallMethod(Reparent, [IsGtkWidget, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "reparent", arg1);
end);
InstallMethod(Hide, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "hide");
end);
InstallMethod(AddEvents, [IsGtkWidget, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "add_events", arg1);
end);
InstallMethod(GetParentWindow, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_parent_window");
end);
InstallMethod(GetRootWindow, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_root_window");
end);
InstallMethod(SetSensitive, [IsGtkWidget, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_sensitive", arg1);
end);
InstallMethod(SetSizeRequest, [IsGtkWidget, IsInt, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_size_request", arg1, arg2);
end);
InstallMethod(GetScreen, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_screen");
end);
InstallOtherMethod(SetParent, [IsGtkWidget, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_parent", arg1);
end);
InstallMethod(GetSettings, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_settings");
end);
InstallMethod(Map, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "map");
end);
InstallMethod(GetStyle, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_style");
end);
InstallMethod(GetParent, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_parent");
end);
InstallMethod(HideAll, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "hide_all");
end);
InstallMethod(GetChildVisible, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_child_visible");
end);
InstallMethod(HasScreen, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "has_screen");
end);
InstallMethod(Unrealize, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "unrealize");
end);
InstallMethod(Realize, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "realize");
end);
InstallMethod(SetEvents, [IsGtkWidget, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_events", arg1);
end);
InstallMethod(IsAncestor, [IsGtkWidget, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "is_ancestor", arg1);
end);
InstallMethod(GrabFocus, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "grab_focus");
end);
InstallOtherMethod(SetName, [IsGtkWidget, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_name", arg1);
end);
InstallMethod(Unmap, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "unmap");
end);
InstallMethod(GetSizeRequest, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_size_request");
end);
InstallMethod(ShowAll, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "show_all");
end);
InstallMethod(GetName, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_name");
end);
InstallMethod(SetChildVisible, [IsGtkWidget, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_child_visible", arg1);
end);
InstallMethod(QueueResizeNoRedraw, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "queue_resize_no_redraw");
end);
InstallMethod(GetEvents, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "get_events");
end);
InstallMethod(ShowNow, [IsGtkWidget],
function(self)
    return _GGAP_CALL_METH(self, "show_now");
end);
InstallMethod(GetResizeMode, [IsGtkContainer],
function(self)
    return _GGAP_CALL_METH(self, "get_resize_mode");
end);
InstallMethod(ResizeChildren, [IsGtkContainer],
function(self)
    return _GGAP_CALL_METH(self, "resize_children");
end);
InstallMethod(SetResizeMode, [IsGtkContainer, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_resize_mode", arg1);
end);
InstallMethod(GetChildren, [IsGtkContainer],
function(self)
    return _GGAP_CALL_METH(self, "get_children");
end);
InstallMethod(GetBorderWidth, [IsGtkContainer],
function(self)
    return _GGAP_CALL_METH(self, "get_border_width");
end);
InstallOtherMethod(Add, [IsGtkContainer, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "add", arg1);
end);
InstallMethod(SetBorderWidth, [IsGtkContainer, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_border_width", arg1);
end);
InstallMethod(CheckResize, [IsGtkContainer],
function(self)
    return _GGAP_CALL_METH(self, "check_resize");
end);
InstallOtherMethod(Remove, [IsGtkContainer, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "remove", arg1);
end);
InstallMethod(ReorderChild, [IsGtkBox, IsGtkWidget, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "reorder_child", arg1, arg2);
end);
InstallMethod(PackEnd, [IsGtkBox, IsGtkWidget, IsBool, IsBool, IsInt],
function(self, arg1, arg2, arg3, arg4)
    return _GGAP_CALL_METH(self, "pack_end", arg1, arg2, arg3, arg4);
end);
InstallMethod(GetHomogeneous, [IsGtkBox],
function(self)
    return _GGAP_CALL_METH(self, "get_homogeneous");
end);
InstallMethod(PackStart, [IsGtkBox, IsGtkWidget, IsBool, IsBool, IsInt],
function(self, arg1, arg2, arg3, arg4)
    return _GGAP_CALL_METH(self, "pack_start", arg1, arg2, arg3, arg4);
end);
InstallMethod(SetHomogeneous, [IsGtkBox, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_homogeneous", arg1);
end);
InstallMethod(PackStartDefaults, [IsGtkBox, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "pack_start_defaults", arg1);
end);
InstallMethod(PackEndDefaults, [IsGtkBox, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "pack_end_defaults", arg1);
end);
InstallMethod(SetSpacing, [IsGtkBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_spacing", arg1);
end);
InstallMethod(GetSpacing, [IsGtkBox],
function(self)
    return _GGAP_CALL_METH(self, "get_spacing");
end);
InstallMethod(SetChildSecondary, [IsGtkButtonBox, IsGtkWidget, IsBool],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_child_secondary", arg1, arg2);
end);
InstallMethod(SetLayout, [IsGtkButtonBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_layout", arg1);
end);
InstallMethod(GetLayout, [IsGtkButtonBox],
function(self)
    return _GGAP_CALL_METH(self, "get_layout");
end);
InstallMethod(GetChildSize, [IsGtkButtonBox],
function(self)
    return _GGAP_CALL_METH(self, "get_child_size");
end);
InstallMethod(GetChildSecondary, [IsGtkButtonBox, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "get_child_secondary", arg1);
end);
InstallMethod(GetChildIpadding, [IsGtkButtonBox],
function(self)
    return _GGAP_CALL_METH(self, "get_child_ipadding");
end);
InstallMethod(GtkHButtonBox, [],
function()
    return _GGAP_CALL_FUNC("gtk.HButtonBox");
end);
InstallMethod(GtkVButtonBox, [],
function()
    return _GGAP_CALL_FUNC("gtk.VButtonBox");
end);
InstallMethod(GtkHBox, [IsBool, IsInt],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.HBox", arg1, arg2);
end);
InstallMethod(GtkVBox, [IsBool, IsInt],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.VBox", arg1, arg2);
end);
InstallMethod(GetChild, [IsGtkBin],
function(self)
    return _GGAP_CALL_METH(self, "get_child");
end);
InstallMethod(GetFocus, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_focus");
end);
InstallMethod(SetTransientFor, [IsGtkWindow, IsGtkWindow],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_transient_for", arg1);
end);
InstallMethod(GetDestroyWithParent, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_destroy_with_parent");
end);
InstallMethod(SetDecorated, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_decorated", arg1);
end);
InstallMethod(GetPosition, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_position");
end);
InstallMethod(Move, [IsGtkWindow, IsInt, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "move", arg1, arg2);
end);
InstallMethod(GetIconList, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_icon_list");
end);
InstallMethod(GetTitle, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_title");
end);
InstallMethod(GetSkipPagerHint, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_skip_pager_hint");
end);
InstallMethod(SetKeepBelow, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_keep_below", arg1);
end);
InstallMethod(GetHasFrame, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_has_frame");
end);
InstallMethod(Iconify, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "iconify");
end);
InstallMethod(Maximize, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "maximize");
end);
InstallMethod(ParseGeometry, [IsGtkWindow, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "parse_geometry", arg1);
end);
InstallMethod(Unmaximize, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "unmaximize");
end);
InstallMethod(SetDestroyWithParent, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_destroy_with_parent", arg1);
end);
InstallMethod(SetModal, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_modal", arg1);
end);
InstallMethod(GetFocusOnMap, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_focus_on_map");
end);
InstallMethod(SetFocus, [IsGtkWindow, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_focus", arg1);
end);
InstallMethod(Fullscreen, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "fullscreen");
end);
InstallMethod(GetDefaultSize, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_default_size");
end);
InstallMethod(GetMnemonicModifier, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_mnemonic_modifier");
end);
InstallMethod(GtkWindow, [],
function()
    return _GGAP_CALL_FUNC("gtk.Window");
end);
InstallMethod(GtkWindow, [IsInt],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.Window", arg1);
end);
InstallMethod(GtkWindow, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.Window", optarg);
end);
InstallMethod(SetFocusOnMap, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_focus_on_map", arg1);
end);
InstallMethod(ActivateDefault, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "activate_default");
end);
InstallMethod(GetSize, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_size");
end);
InstallMethod(SetSkipPagerHint, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_skip_pager_hint", arg1);
end);
InstallMethod(GetSkipTaskbarHint, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_skip_taskbar_hint");
end);
InstallMethod(SetRole, [IsGtkWindow, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_role", arg1);
end);
InstallMethod(ActivateFocus, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "activate_focus");
end);
InstallMethod(Resize, [IsGtkWindow, IsInt, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "resize", arg1, arg2);
end);
InstallMethod(Unstick, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "unstick");
end);
InstallMethod(SetDefault, [IsGtkWindow, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_default", arg1);
end);
InstallMethod(GetAcceptFocus, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_accept_focus");
end);
InstallMethod(GetResizable, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_resizable");
end);
InstallMethod(HasToplevelFocus, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "has_toplevel_focus");
end);
InstallMethod(GetIconName, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_icon_name");
end);
InstallMethod(SetSkipTaskbarHint, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_skip_taskbar_hint", arg1);
end);
InstallMethod(GetModal, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_modal");
end);
InstallMethod(SetAcceptFocus, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_accept_focus", arg1);
end);
InstallMethod(IsActive, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "is_active");
end);
InstallMethod(SetHasFrame, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_has_frame", arg1);
end);
InstallMethod(SetTitle, [IsGtkWindow, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_title", arg1);
end);
InstallMethod(SetTypeHint, [IsGtkWindow, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_type_hint", arg1);
end);
InstallMethod(Stick, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "stick");
end);
InstallMethod(SetKeepAbove, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_keep_above", arg1);
end);
InstallMethod(Present, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "present");
end);
InstallMethod(GetUrgencyHint, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_urgency_hint");
end);
InstallMethod(GetRole, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_role");
end);
InstallMethod(GetIcon, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_icon");
end);
InstallMethod(Deiconify, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "deiconify");
end);
InstallMethod(SetDefaultSize, [IsGtkWindow, IsInt, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_default_size", arg1, arg2);
end);
InstallMethod(GetTransientFor, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_transient_for");
end);
InstallMethod(SetResizable, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_resizable", arg1);
end);
InstallMethod(SetUrgencyHint, [IsGtkWindow, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_urgency_hint", arg1);
end);
InstallMethod(Unfullscreen, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "unfullscreen");
end);
InstallMethod(GetDecorated, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_decorated");
end);
InstallMethod(ReshowWithInitialSize, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "reshow_with_initial_size");
end);
InstallMethod(GetTypeHint, [IsGtkWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_type_hint");
end);
InstallMethod(SetHasSeparator, [IsGtkDialog, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_has_separator", arg1);
end);
InstallMethod(Run, [IsGtkDialog],
function(self)
    return _GGAP_CALL_METH(self, "run");
end);
InstallMethod(GtkDialog, [],
function()
    return _GGAP_CALL_FUNC("gtk.Dialog");
end);
InstallMethod(GtkDialog, [IsString],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.Dialog", arg1);
end);
InstallMethod(GtkDialog, [IsString, IsGtkWindow],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.Dialog", arg1, arg2);
end);
InstallMethod(GtkDialog, [IsString, IsGtkWindow, IsInt],
function(arg1, arg2, arg3)
    return _GGAP_CALL_FUNC("gtk.Dialog", arg1, arg2, arg3);
end);
InstallMethod(GtkDialog, [IsString, IsGtkWindow, IsInt, IsList],
function(arg1, arg2, arg3, arg4)
    return _GGAP_CALL_FUNC("gtk.Dialog", arg1, arg2, arg3, arg4);
end);
InstallMethod(GtkDialog, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.Dialog", optarg);
end);
InstallMethod(SetDefaultResponse, [IsGtkDialog, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_default_response", arg1);
end);
InstallMethod(GetResponseForWidget, [IsGtkDialog, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "get_response_for_widget", arg1);
end);
InstallMethod(AddActionWidget, [IsGtkDialog, IsGtkWidget, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "add_action_widget", arg1, arg2);
end);
InstallMethod(AddButton, [IsGtkDialog, IsString, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "add_button", arg1, arg2);
end);
InstallMethod(GetHasSeparator, [IsGtkDialog],
function(self)
    return _GGAP_CALL_METH(self, "get_has_separator");
end);
InstallMethod(Response, [IsGtkDialog, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "response", arg1);
end);
InstallMethod(SetResponseSensitive, [IsGtkDialog, IsInt, IsBool],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_response_sensitive", arg1, arg2);
end);
InstallMethod(SetMarkup, [IsGtkMessageDialog, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_markup", arg1);
end);
InstallMethod(Deselect, [IsGtkMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "deselect");
end);
InstallMethod(GtkMenuitem, [],
function()
    return _GGAP_CALL_FUNC("gtk.MenuItem");
end);
InstallMethod(GtkMenuitem, [IsString],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.MenuItem", arg1);
end);
InstallMethod(GtkMenuitem, [IsString, IsBool],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.MenuItem", arg1, arg2);
end);
InstallMethod(GtkMenuitem, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.MenuItem", optarg);
end);
InstallMethod(SetAccelPath, [IsGtkMenuItem, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_accel_path", arg1);
end);
InstallMethod(GetRightJustified, [IsGtkMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "get_right_justified");
end);
InstallMethod(SetSubmenu, [IsGtkMenuItem, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_submenu", arg1);
end);
InstallMethod(SetRightJustified, [IsGtkMenuItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_right_justified", arg1);
end);
InstallMethod(RemoveSubmenu, [IsGtkMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "remove_submenu");
end);
InstallMethod(GetSubmenu, [IsGtkMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "get_submenu");
end);
InstallMethod(Select, [IsGtkMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "select");
end);
InstallMethod(GetImage, [IsGtkImageMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "get_image");
end);
InstallMethod(SetImage, [IsGtkImageMenuItem, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_image", arg1);
end);
InstallMethod(SetDrawAsRadio, [IsGtkCheckMenuItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_draw_as_radio", arg1);
end);
InstallMethod(SetShowToggle, [IsGtkCheckMenuItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_show_toggle", arg1);
end);
InstallMethod(GtkCheckmenuitem, [],
function()
    return _GGAP_CALL_FUNC("gtk.CheckMenuItem");
end);
InstallMethod(GtkCheckmenuitem, [IsString],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.CheckMenuItem", arg1);
end);
InstallMethod(GtkCheckmenuitem, [IsString, IsBool],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.CheckMenuItem", arg1, arg2);
end);
InstallMethod(GtkCheckmenuitem, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.CheckMenuItem", optarg);
end);
InstallMethod(SetActive, [IsGtkCheckMenuItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_active", arg1);
end);
InstallMethod(GetDrawAsRadio, [IsGtkCheckMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "get_draw_as_radio");
end);
InstallMethod(SetInconsistent, [IsGtkCheckMenuItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_inconsistent", arg1);
end);
InstallMethod(GetActive, [IsGtkCheckMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "get_active");
end);
InstallMethod(GetInconsistent, [IsGtkCheckMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "get_inconsistent");
end);
InstallMethod(Toggled, [IsGtkCheckMenuItem],
function(self)
    return _GGAP_CALL_METH(self, "toggled");
end);
InstallMethod(GtkEventbox, [],
function()
    return _GGAP_CALL_FUNC("gtk.EventBox");
end);
InstallMethod(SetColumnSpanColumn, [IsGtkComboBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_column_span_column", arg1);
end);
InstallMethod(GetFocusOnClick, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "get_focus_on_click");
end);
InstallMethod(GetActive, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "get_active");
end);
InstallMethod(Popdown, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "popdown");
end);
InstallMethod(AppendText, [IsGtkComboBox, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "append_text", arg1);
end);
InstallMethod(GetColumnSpanColumn, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "get_column_span_column");
end);
InstallMethod(SetWrapWidth, [IsGtkComboBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_wrap_width", arg1);
end);
InstallMethod(SetRowSpanColumn, [IsGtkComboBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_row_span_column", arg1);
end);
InstallMethod(Popup, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "popup");
end);
InstallMethod(GetActiveText, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "get_active_text");
end);
InstallMethod(RemoveText, [IsGtkComboBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "remove_text", arg1);
end);
InstallMethod(InsertText, [IsGtkComboBox, IsInt, IsString],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "insert_text", arg1, arg2);
end);
InstallMethod(PrependText, [IsGtkComboBox, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "prepend_text", arg1);
end);
InstallMethod(SetActive, [IsGtkComboBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_active", arg1);
end);
InstallMethod(SetModel, [IsGtkComboBox, IsGtkTreeModel],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_model", arg1);
end);
InstallMethod(GetModel, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "get_model");
end);
InstallMethod(SetFocusOnClick, [IsGtkComboBox, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_focus_on_click", arg1);
end);
InstallMethod(GetWrapWidth, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "get_wrap_width");
end);
InstallMethod(GetRowSpanColumn, [IsGtkComboBox],
function(self)
    return _GGAP_CALL_METH(self, "get_row_span_column");
end);
InstallMethod(GetTextColumn, [IsGtkComboBoxEntry],
function(self)
    return _GGAP_CALL_METH(self, "get_text_column");
end);
InstallMethod(SetTextColumn, [IsGtkComboBoxEntry, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_text_column", arg1);
end);
InstallMethod(SetPadding, [IsGtkAlignment, IsInt, IsInt, IsInt, IsInt],
function(self, arg1, arg2, arg3, arg4)
    return _GGAP_CALL_METH(self, "set_padding", arg1, arg2, arg3, arg4);
end);
InstallMethod(Set, [IsGtkAlignment, IsRat, IsRat, IsRat, IsRat],
function(self, arg1, arg2, arg3, arg4)
    return _GGAP_CALL_METH(self, "set", arg1, arg2, arg3, arg4);
end);
InstallMethod(GetPadding, [IsGtkAlignment],
function(self)
    return _GGAP_CALL_METH(self, "get_padding");
end);
InstallMethod(GtkHandlebox, [],
function()
    return _GGAP_CALL_FUNC("gtk.HandleBox");
end);
InstallMethod(SetHandlePosition, [IsGtkHandleBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_handle_position", arg1);
end);
InstallMethod(SetShadowType, [IsGtkHandleBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_shadow_type", arg1);
end);
InstallMethod(GetShadowType, [IsGtkHandleBox],
function(self)
    return _GGAP_CALL_METH(self, "get_shadow_type");
end);
InstallMethod(SetSnapEdge, [IsGtkHandleBox, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_snap_edge", arg1);
end);
InstallMethod(GetSnapEdge, [IsGtkHandleBox],
function(self)
    return _GGAP_CALL_METH(self, "get_snap_edge");
end);
InstallMethod(GetHandlePosition, [IsGtkHandleBox],
function(self)
    return _GGAP_CALL_METH(self, "get_handle_position");
end);
InstallMethod(SetUseUnderline, [IsGtkExpander, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_underline", arg1);
end);
InstallMethod(GtkExpander, [],
function()
    return _GGAP_CALL_FUNC("gtk.Expander");
end);
InstallMethod(GtkExpander, [IsString],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.Expander", arg1);
end);
InstallMethod(GtkExpander, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.Expander", optarg);
end);
InstallMethod(SetLabelWidget, [IsGtkExpander, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_label_widget", arg1);
end);
InstallMethod(SetExpanded, [IsGtkExpander, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_expanded", arg1);
end);
InstallMethod(GetLabel, [IsGtkExpander],
function(self)
    return _GGAP_CALL_METH(self, "get_label");
end);
InstallMethod(SetLabel, [IsGtkExpander, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_label", arg1);
end);
InstallMethod(GetExpanded, [IsGtkExpander],
function(self)
    return _GGAP_CALL_METH(self, "get_expanded");
end);
InstallMethod(SetUseMarkup, [IsGtkExpander, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_markup", arg1);
end);
InstallMethod(GetUseMarkup, [IsGtkExpander],
function(self)
    return _GGAP_CALL_METH(self, "get_use_markup");
end);
InstallMethod(SetSpacing, [IsGtkExpander, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_spacing", arg1);
end);
InstallMethod(GetUseUnderline, [IsGtkExpander],
function(self)
    return _GGAP_CALL_METH(self, "get_use_underline");
end);
InstallMethod(GetLabelWidget, [IsGtkExpander],
function(self)
    return _GGAP_CALL_METH(self, "get_label_widget");
end);
InstallMethod(GetSpacing, [IsGtkExpander],
function(self)
    return _GGAP_CALL_METH(self, "get_spacing");
end);
InstallMethod(SetIsImportant, [IsGtkToolItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_is_important", arg1);
end);
InstallMethod(GetReliefStyle, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_relief_style");
end);
InstallMethod(SetExpand, [IsGtkToolItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_expand", arg1);
end);
InstallMethod(SetHomogeneous, [IsGtkToolItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_homogeneous", arg1);
end);
InstallMethod(RetrieveProxyMenuItem, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "retrieve_proxy_menu_item");
end);
InstallMethod(SetProxyMenuItem, [IsGtkToolItem, IsString, IsGtkWidget],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_proxy_menu_item", arg1, arg2);
end);
InstallMethod(GtkToolitem, [],
function()
    return _GGAP_CALL_FUNC("gtk.ToolItem");
end);
InstallMethod(GetOrientation, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_orientation");
end);
InstallMethod(GetIconSize, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_icon_size");
end);
InstallMethod(GetUseDragWindow, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_use_drag_window");
end);
InstallMethod(GetHomogeneous, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_homogeneous");
end);
InstallMethod(SetUseDragWindow, [IsGtkToolItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_drag_window", arg1);
end);
InstallMethod(GetIsImportant, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_is_important");
end);
InstallMethod(SetVisibleHorizontal, [IsGtkToolItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_visible_horizontal", arg1);
end);
InstallMethod(GetProxyMenuItem, [IsGtkToolItem, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "get_proxy_menu_item", arg1);
end);
InstallMethod(SetTooltip, [IsGtkToolItem, IsGtkTooltips, IsString, IsString],
function(self, arg1, arg2, arg3)
    return _GGAP_CALL_METH(self, "set_tooltip", arg1, arg2, arg3);
end);
InstallMethod(GetExpand, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_expand");
end);
InstallMethod(RebuildMenu, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "rebuild_menu");
end);
InstallMethod(SetVisibleVertical, [IsGtkToolItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_visible_vertical", arg1);
end);
InstallMethod(GetVisibleHorizontal, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_visible_horizontal");
end);
InstallMethod(GetToolbarStyle, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_toolbar_style");
end);
InstallMethod(GetVisibleVertical, [IsGtkToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_visible_vertical");
end);
InstallMethod(SetDraw, [IsGtkSeparatorToolItem, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_draw", arg1);
end);
InstallMethod(GtkSeparatortoolitem, [],
function()
    return _GGAP_CALL_FUNC("gtk.SeparatorToolItem");
end);
InstallMethod(GetDraw, [IsGtkSeparatorToolItem],
function(self)
    return _GGAP_CALL_METH(self, "get_draw");
end);
InstallMethod(GetStockId, [IsGtkToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_stock_id");
end);
InstallMethod(GetIconName, [IsGtkToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_icon_name");
end);
InstallMethod(GtkToolbutton, [],
function()
    return _GGAP_CALL_FUNC("gtk.ToolButton");
end);
InstallMethod(GtkToolbutton, [IsGtkWidget],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.ToolButton", arg1);
end);
InstallMethod(GtkToolbutton, [IsGtkWidget, IsString],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.ToolButton", arg1, arg2);
end);
InstallMethod(GtkToolbutton, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.ToolButton", optarg);
end);
InstallMethod(SetLabelWidget, [IsGtkToolButton, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_label_widget", arg1);
end);
InstallMethod(GetIconWidget, [IsGtkToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_icon_widget");
end);
InstallMethod(GetLabel, [IsGtkToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_label");
end);
InstallMethod(SetLabel, [IsGtkToolButton, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_label", arg1);
end);
InstallMethod(SetIconName, [IsGtkToolButton, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_icon_name", arg1);
end);
InstallMethod(SetUseUnderline, [IsGtkToolButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_underline", arg1);
end);
InstallMethod(SetIconWidget, [IsGtkToolButton, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_icon_widget", arg1);
end);
InstallMethod(GetUseUnderline, [IsGtkToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_use_underline");
end);
InstallMethod(GetLabelWidget, [IsGtkToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_label_widget");
end);
InstallMethod(SetStockId, [IsGtkToolButton, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_stock_id", arg1);
end);
InstallMethod(GetActive, [IsGtkToggleToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_active");
end);
InstallMethod(SetActive, [IsGtkToggleToolButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_active", arg1);
end);
InstallMethod(GetMenu, [IsGtkMenuToolButton],
function(self)
    return _GGAP_CALL_METH(self, "get_menu");
end);
InstallMethod(SetMenu, [IsGtkMenuToolButton, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_menu", arg1);
end);
InstallMethod(SetArrowTooltip, [IsGtkMenuToolButton, IsGtkTooltips, IsString, IsString],
function(self, arg1, arg2, arg3)
    return _GGAP_CALL_METH(self, "set_arrow_tooltip", arg1, arg2, arg3);
end);
InstallMethod(SetHadjustment, [IsGtkScrolledWindow, IsGtkAdjustment],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_hadjustment", arg1);
end);
InstallMethod(AddWithViewport, [IsGtkScrolledWindow, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "add_with_viewport", arg1);
end);
InstallMethod(GetVscrollbar, [IsGtkScrolledWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_vscrollbar");
end);
InstallMethod(SetPolicy, [IsGtkScrolledWindow, IsInt, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_policy", arg1, arg2);
end);
InstallMethod(SetShadowType, [IsGtkScrolledWindow, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_shadow_type", arg1);
end);
InstallMethod(GetPolicy, [IsGtkScrolledWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_policy");
end);
InstallMethod(SetVadjustment, [IsGtkScrolledWindow, IsGtkAdjustment],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_vadjustment", arg1);
end);
InstallMethod(GetShadowType, [IsGtkScrolledWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_shadow_type");
end);
InstallMethod(GetHadjustment, [IsGtkScrolledWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_hadjustment");
end);
InstallMethod(SetPlacement, [IsGtkScrolledWindow, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_placement", arg1);
end);
InstallMethod(GetHscrollbar, [IsGtkScrolledWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_hscrollbar");
end);
InstallMethod(GetPlacement, [IsGtkScrolledWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_placement");
end);
InstallMethod(GetVadjustment, [IsGtkScrolledWindow],
function(self)
    return _GGAP_CALL_METH(self, "get_vadjustment");
end);
InstallMethod(GtkScrolledwindow, [IsGtkAdjustment, IsGtkAdjustment],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.ScrolledWindow", arg1, arg2);
end);
InstallMethod(SetHadjustment, [IsGtkViewport, IsGtkAdjustment],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_hadjustment", arg1);
end);
InstallMethod(GtkViewport, [IsGtkAdjustment, IsGtkAdjustment],
function(arg1, arg2)
    return _GGAP_CALL_FUNC("gtk.Viewport", arg1, arg2);
end);
InstallMethod(SetVadjustment, [IsGtkViewport, IsGtkAdjustment],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_vadjustment", arg1);
end);
InstallMethod(GetShadowType, [IsGtkViewport],
function(self)
    return _GGAP_CALL_METH(self, "get_shadow_type");
end);
InstallMethod(GetHadjustment, [IsGtkViewport],
function(self)
    return _GGAP_CALL_METH(self, "get_hadjustment");
end);
InstallMethod(SetShadowType, [IsGtkViewport, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_shadow_type", arg1);
end);
InstallMethod(GetVadjustment, [IsGtkViewport],
function(self)
    return _GGAP_CALL_METH(self, "get_vadjustment");
end);
InstallMethod(GetFocusOnClick, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "get_focus_on_click");
end);
InstallMethod(SetLabel, [IsGtkButton, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_label", arg1);
end);
InstallMethod(GetUseStock, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "get_use_stock");
end);
InstallMethod(GetRelief, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "get_relief");
end);
InstallMethod(SetAlignment, [IsGtkButton, IsRat, IsRat],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_alignment", arg1, arg2);
end);
InstallMethod(Leave, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "leave");
end);
InstallMethod(Clicked, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "clicked");
end);
InstallMethod(GetAlignment, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "get_alignment");
end);
InstallMethod(GetUseUnderline, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "get_use_underline");
end);
InstallMethod(SetImage, [IsGtkButton, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_image", arg1);
end);
InstallMethod(GetLabel, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "get_label");
end);
InstallMethod(Released, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "released");
end);
InstallMethod(SetUseStock, [IsGtkButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_stock", arg1);
end);
InstallMethod(SetRelief, [IsGtkButton, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_relief", arg1);
end);
InstallMethod(GetImage, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "get_image");
end);
InstallMethod(SetUseUnderline, [IsGtkButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_underline", arg1);
end);
InstallMethod(Pressed, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "pressed");
end);
InstallMethod(Enter, [IsGtkButton],
function(self)
    return _GGAP_CALL_METH(self, "enter");
end);
InstallMethod(SetFocusOnClick, [IsGtkButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_focus_on_click", arg1);
end);
InstallMethod(SetTitle, [IsGtkColorButton, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_title", arg1);
end);
InstallMethod(GetTitle, [IsGtkColorButton],
function(self)
    return _GGAP_CALL_METH(self, "get_title");
end);
InstallMethod(SetMode, [IsGtkToggleButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_mode", arg1);
end);
InstallMethod(SetActive, [IsGtkToggleButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_active", arg1);
end);
InstallMethod(SetInconsistent, [IsGtkToggleButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_inconsistent", arg1);
end);
InstallMethod(GetActive, [IsGtkToggleButton],
function(self)
    return _GGAP_CALL_METH(self, "get_active");
end);
InstallMethod(GetMode, [IsGtkToggleButton],
function(self)
    return _GGAP_CALL_METH(self, "get_mode");
end);
InstallMethod(GetInconsistent, [IsGtkToggleButton],
function(self)
    return _GGAP_CALL_METH(self, "get_inconsistent");
end);
InstallMethod(Toggled, [IsGtkToggleButton],
function(self)
    return _GGAP_CALL_METH(self, "toggled");
end);
InstallMethod(GetShowSize, [IsGtkFontButton],
function(self)
    return _GGAP_CALL_METH(self, "get_show_size");
end);
InstallMethod(GetUseFont, [IsGtkFontButton],
function(self)
    return _GGAP_CALL_METH(self, "get_use_font");
end);
InstallMethod(GtkFontbutton, [],
function()
    return _GGAP_CALL_FUNC("gtk.FontButton");
end);
InstallMethod(GtkFontbutton, [IsString],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.FontButton", arg1);
end);
InstallMethod(GtkFontbutton, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.FontButton", optarg);
end);
InstallMethod(SetShowStyle, [IsGtkFontButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_show_style", arg1);
end);
InstallMethod(SetShowSize, [IsGtkFontButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_show_size", arg1);
end);
InstallMethod(GetTitle, [IsGtkFontButton],
function(self)
    return _GGAP_CALL_METH(self, "get_title");
end);
InstallMethod(SetUseFont, [IsGtkFontButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_font", arg1);
end);
InstallMethod(SetTitle, [IsGtkFontButton, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_title", arg1);
end);
InstallMethod(GetFontName, [IsGtkFontButton],
function(self)
    return _GGAP_CALL_METH(self, "get_font_name");
end);
InstallMethod(GetShowStyle, [IsGtkFontButton],
function(self)
    return _GGAP_CALL_METH(self, "get_show_style");
end);
InstallMethod(GetUseSize, [IsGtkFontButton],
function(self)
    return _GGAP_CALL_METH(self, "get_use_size");
end);
InstallMethod(SetUseSize, [IsGtkFontButton, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_use_size", arg1);
end);
InstallMethod(SetFontName, [IsGtkFontButton, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_font_name", arg1);
end);
InstallMethod(SetLabelWidget, [IsGtkFrame, IsGtkWidget],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_label_widget", arg1);
end);
InstallMethod(SetShadowType, [IsGtkFrame, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_shadow_type", arg1);
end);
InstallMethod(GetLabel, [IsGtkFrame],
function(self)
    return _GGAP_CALL_METH(self, "get_label");
end);
InstallMethod(SetLabel, [IsGtkFrame, IsString],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_label", arg1);
end);
InstallMethod(GetShadowType, [IsGtkFrame],
function(self)
    return _GGAP_CALL_METH(self, "get_shadow_type");
end);
InstallMethod(GetLabelAlign, [IsGtkFrame],
function(self)
    return _GGAP_CALL_METH(self, "get_label_align");
end);
InstallMethod(SetLabelAlign, [IsGtkFrame, IsRat, IsRat],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_label_align", arg1, arg2);
end);
InstallMethod(GetLabelWidget, [IsGtkFrame],
function(self)
    return _GGAP_CALL_METH(self, "get_label_widget");
end);
InstallMethod(Set, [IsGtkAspectFrame, IsRat, IsRat, IsRat, IsBool],
function(self, arg1, arg2, arg3, arg4)
    return _GGAP_CALL_METH(self, "set", arg1, arg2, arg3, arg4);
end);
InstallMethod(GetReliefStyle, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "get_relief_style");
end);
InstallMethod(SetOrientation, [IsGtkToolbar, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_orientation", arg1);
end);
InstallMethod(GtkToolbar, [],
function()
    return _GGAP_CALL_FUNC("gtk.Toolbar");
end);
InstallMethod(GetOrientation, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "get_orientation");
end);
InstallMethod(GetToolbarStyle, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "get_style");
end);
InstallMethod(GetIconSize, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "get_icon_size");
end);
InstallMethod(UnsetStyle, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "unset_style");
end);
InstallMethod(GetItemIndex, [IsGtkToolbar, IsGtkToolItem],
function(self, arg1)
    return _GGAP_CALL_METH(self, "get_item_index", arg1);
end);
InstallMethod(SetShowArrow, [IsGtkToolbar, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_show_arrow", arg1);
end);
InstallMethod(SetStyle, [IsGtkToolbar, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_style", arg1);
end);
InstallMethod(SetTooltips, [IsGtkToolbar, IsBool],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_tooltips", arg1);
end);
InstallMethod(UnsetIconSize, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "unset_icon_size");
end);
InstallMethod(GetDropIndex, [IsGtkToolbar, IsInt, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "get_drop_index", arg1, arg2);
end);
InstallMethod(Insert, [IsGtkToolbar, IsGtkToolItem, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "insert", arg1, arg2);
end);
InstallMethod(GetShowArrow, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "get_show_arrow");
end);
InstallMethod(GetNItems, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "get_n_items");
end);
InstallMethod(SetDropHighlightItem, [IsGtkToolbar, IsGtkToolItem, IsInt],
function(self, arg1, arg2)
    return _GGAP_CALL_METH(self, "set_drop_highlight_item", arg1, arg2);
end);
InstallMethod(GetTooltips, [IsGtkToolbar],
function(self)
    return _GGAP_CALL_METH(self, "get_tooltips");
end);
InstallMethod(GetNthItem, [IsGtkToolbar, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "get_nth_item", arg1);
end);
InstallMethod(SetIconSize, [IsGtkToolbar, IsInt],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_icon_size", arg1);
end);
InstallMethod(SetBuffer, [IsGtkTextView, IsGtkTextBuffer],
function(self, arg1)
    return _GGAP_CALL_METH(self, "set_buffer", arg1);
end);
InstallMethod(GtkTextview, [],
function()
    return _GGAP_CALL_FUNC("gtk.TextView");
end);
InstallMethod(GtkTextview, [IsGtkTextBuffer],
function(arg1)
    return _GGAP_CALL_FUNC("gtk.TextView", arg1);
end);
InstallMethod(GtkTextview, [IsRecord],
function(optarg)
    return _GGAP_CALL_FUNC_OPTARG("gtk.TextView", optarg);
end);
InstallMethod(GetBuffer, [IsGtkTextView],
function(self)
    return _GGAP_CALL_METH(self, "get_buffer");
end);

InstallGlobalFunction(_GGAP_REGISTER_WIDGETS,
function()
_GGAP_REGISTER_TYPE("GtkFileChooser", IsGtkFileChooser);
_GGAP_REGISTER_TYPE("GtkEditable", IsGtkEditable);
_GGAP_REGISTER_TYPE("GtkTreeViewColumn", IsGtkTreeViewColumn);
_GGAP_REGISTER_TYPE("GtkTreeSelection", IsGtkTreeSelection);
_GGAP_REGISTER_TYPE("GtkUIManager", IsGtkUIManager);
_GGAP_REGISTER_TYPE("GtkRcStyle", IsGtkRcStyle);
_GGAP_REGISTER_TYPE("GtkWindowGroup", IsGtkWindowGroup);
_GGAP_REGISTER_TYPE("GtkTreeDragSource", IsGtkTreeDragSource);
_GGAP_REGISTER_TYPE("GtkTreeModelFilter", IsGtkTreeModelFilter);
_GGAP_REGISTER_TYPE("GtkSizeGroup", IsGtkSizeGroup);
_GGAP_REGISTER_TYPE("GtkTooltips", IsGtkTooltips);
_GGAP_REGISTER_TYPE("GtkTreeModel", IsGtkTreeModel);
_GGAP_REGISTER_TYPE("GtkTextChildAnchor", IsGtkTextChildAnchor);
_GGAP_REGISTER_TYPE("GtkEntryCompletion", IsGtkEntryCompletion);
_GGAP_REGISTER_TYPE("GtkFileFilter", IsGtkFileFilter);
_GGAP_REGISTER_TYPE("GtkClipboard", IsGtkClipboard);
_GGAP_REGISTER_TYPE("GtkTreeSortable", IsGtkTreeSortable);
_GGAP_REGISTER_TYPE("GtkTextMark", IsGtkTextMark);
_GGAP_REGISTER_TYPE("GtkIconTheme", IsGtkIconTheme);
_GGAP_REGISTER_TYPE("GtkCellEditable", IsGtkCellEditable);
_GGAP_REGISTER_TYPE("GtkTextTag", IsGtkTextTag);
_GGAP_REGISTER_TYPE("GtkTreeModelSort", IsGtkTreeModelSort);
_GGAP_REGISTER_TYPE("GtkAccelGroup", IsGtkAccelGroup);
_GGAP_REGISTER_TYPE("GtkTreeDragDest", IsGtkTreeDragDest);
_GGAP_REGISTER_TYPE("GtkTextBuffer", IsGtkTextBuffer);
_GGAP_REGISTER_TYPE("MooGladeXML", IsMooGladeXML);
_GGAP_REGISTER_TYPE("GtkStyle", IsGtkStyle);
_GGAP_REGISTER_TYPE("GtkAccelMap", IsGtkAccelMap);
_GGAP_REGISTER_TYPE("GtkObject", IsGtkObject);
_GGAP_REGISTER_TYPE("GtkAdjustment", IsGtkAdjustment);
_GGAP_REGISTER_TYPE("GtkWidget", IsGtkWidget);
_GGAP_REGISTER_TYPE("GtkCalendar", IsGtkCalendar);
_GGAP_REGISTER_TYPE("GtkInvisible", IsGtkInvisible);
_GGAP_REGISTER_TYPE("GtkRuler", IsGtkRuler);
_GGAP_REGISTER_TYPE("GtkHRuler", IsGtkHRuler);
_GGAP_REGISTER_TYPE("GtkVRuler", IsGtkVRuler);
_GGAP_REGISTER_TYPE("GtkProgress", IsGtkProgress);
_GGAP_REGISTER_TYPE("GtkProgressBar", IsGtkProgressBar);
_GGAP_REGISTER_TYPE("GtkPreview", IsGtkPreview);
_GGAP_REGISTER_TYPE("GtkRange", IsGtkRange);
_GGAP_REGISTER_TYPE("GtkScrollbar", IsGtkScrollbar);
_GGAP_REGISTER_TYPE("GtkVScrollbar", IsGtkVScrollbar);
_GGAP_REGISTER_TYPE("GtkHScrollbar", IsGtkHScrollbar);
_GGAP_REGISTER_TYPE("GtkScale", IsGtkScale);
_GGAP_REGISTER_TYPE("GtkVScale", IsGtkVScale);
_GGAP_REGISTER_TYPE("GtkHScale", IsGtkHScale);
_GGAP_REGISTER_TYPE("GtkDrawingArea", IsGtkDrawingArea);
_GGAP_REGISTER_TYPE("GtkCurve", IsGtkCurve);
_GGAP_REGISTER_TYPE("GtkSeparator", IsGtkSeparator);
_GGAP_REGISTER_TYPE("GtkHSeparator", IsGtkHSeparator);
_GGAP_REGISTER_TYPE("GtkVSeparator", IsGtkVSeparator);
_GGAP_REGISTER_TYPE("GtkContainer", IsGtkContainer);
_GGAP_REGISTER_TYPE("GtkTable", IsGtkTable);
_GGAP_REGISTER_TYPE("GtkMenuShell", IsGtkMenuShell);
_GGAP_REGISTER_TYPE("GtkMenu", IsGtkMenu);
_GGAP_REGISTER_TYPE("GtkMenuBar", IsGtkMenuBar);
_GGAP_REGISTER_TYPE("GtkPaned", IsGtkPaned);
_GGAP_REGISTER_TYPE("GtkVPaned", IsGtkVPaned);
_GGAP_REGISTER_TYPE("GtkHPaned", IsGtkHPaned);
_GGAP_REGISTER_TYPE("GtkNotebook", IsGtkNotebook);
_GGAP_REGISTER_TYPE("GtkBox", IsGtkBox);
_GGAP_REGISTER_TYPE("GtkButtonBox", IsGtkButtonBox);
_GGAP_REGISTER_TYPE("GtkHButtonBox", IsGtkHButtonBox);
_GGAP_REGISTER_TYPE("GtkVButtonBox", IsGtkVButtonBox);
_GGAP_REGISTER_TYPE("GtkHBox", IsGtkHBox);
_GGAP_REGISTER_TYPE("GtkFileChooserButton", IsGtkFileChooserButton);
_GGAP_REGISTER_TYPE("GtkStatusbar", IsGtkStatusbar);
_GGAP_REGISTER_TYPE("GtkVBox", IsGtkVBox);
_GGAP_REGISTER_TYPE("GtkFontSelection", IsGtkFontSelection);
_GGAP_REGISTER_TYPE("GtkColorSelection", IsGtkColorSelection);
_GGAP_REGISTER_TYPE("GtkGammaCurve", IsGtkGammaCurve);
_GGAP_REGISTER_TYPE("GtkFileChooserWidget", IsGtkFileChooserWidget);
_GGAP_REGISTER_TYPE("GtkTreeView", IsGtkTreeView);
_GGAP_REGISTER_TYPE("GtkBin", IsGtkBin);
_GGAP_REGISTER_TYPE("GtkWindow", IsGtkWindow);
_GGAP_REGISTER_TYPE("GtkDialog", IsGtkDialog);
_GGAP_REGISTER_TYPE("GtkInputDialog", IsGtkInputDialog);
_GGAP_REGISTER_TYPE("GtkFontSelectionDialog", IsGtkFontSelectionDialog);
_GGAP_REGISTER_TYPE("GtkFileChooserDialog", IsGtkFileChooserDialog);
_GGAP_REGISTER_TYPE("GtkColorSelectionDialog", IsGtkColorSelectionDialog);
_GGAP_REGISTER_TYPE("GtkAboutDialog", IsGtkAboutDialog);
_GGAP_REGISTER_TYPE("GtkMessageDialog", IsGtkMessageDialog);
_GGAP_REGISTER_TYPE("GtkItem", IsGtkItem);
_GGAP_REGISTER_TYPE("GtkMenuItem", IsGtkMenuItem);
_GGAP_REGISTER_TYPE("GtkImageMenuItem", IsGtkImageMenuItem);
_GGAP_REGISTER_TYPE("GtkCheckMenuItem", IsGtkCheckMenuItem);
_GGAP_REGISTER_TYPE("GtkRadioMenuItem", IsGtkRadioMenuItem);
_GGAP_REGISTER_TYPE("GtkTearoffMenuItem", IsGtkTearoffMenuItem);
_GGAP_REGISTER_TYPE("GtkSeparatorMenuItem", IsGtkSeparatorMenuItem);
_GGAP_REGISTER_TYPE("GtkEventBox", IsGtkEventBox);
_GGAP_REGISTER_TYPE("GtkComboBox", IsGtkComboBox);
_GGAP_REGISTER_TYPE("GtkComboBoxEntry", IsGtkComboBoxEntry);
_GGAP_REGISTER_TYPE("GtkAlignment", IsGtkAlignment);
_GGAP_REGISTER_TYPE("GtkHandleBox", IsGtkHandleBox);
_GGAP_REGISTER_TYPE("GtkExpander", IsGtkExpander);
_GGAP_REGISTER_TYPE("GtkToolItem", IsGtkToolItem);
_GGAP_REGISTER_TYPE("GtkSeparatorToolItem", IsGtkSeparatorToolItem);
_GGAP_REGISTER_TYPE("GtkToolButton", IsGtkToolButton);
_GGAP_REGISTER_TYPE("GtkToggleToolButton", IsGtkToggleToolButton);
_GGAP_REGISTER_TYPE("GtkRadioToolButton", IsGtkRadioToolButton);
_GGAP_REGISTER_TYPE("GtkMenuToolButton", IsGtkMenuToolButton);
_GGAP_REGISTER_TYPE("GtkScrolledWindow", IsGtkScrolledWindow);
_GGAP_REGISTER_TYPE("GtkPlug", IsGtkPlug);
_GGAP_REGISTER_TYPE("GtkViewport", IsGtkViewport);
_GGAP_REGISTER_TYPE("GtkButton", IsGtkButton);
_GGAP_REGISTER_TYPE("GtkColorButton", IsGtkColorButton);
_GGAP_REGISTER_TYPE("GtkToggleButton", IsGtkToggleButton);
_GGAP_REGISTER_TYPE("GtkCheckButton", IsGtkCheckButton);
_GGAP_REGISTER_TYPE("GtkRadioButton", IsGtkRadioButton);
_GGAP_REGISTER_TYPE("GtkFontButton", IsGtkFontButton);
_GGAP_REGISTER_TYPE("GtkFrame", IsGtkFrame);
_GGAP_REGISTER_TYPE("GtkAspectFrame", IsGtkAspectFrame);
_GGAP_REGISTER_TYPE("GtkIconView", IsGtkIconView);
_GGAP_REGISTER_TYPE("GtkSocket", IsGtkSocket);
_GGAP_REGISTER_TYPE("GtkToolbar", IsGtkToolbar);
_GGAP_REGISTER_TYPE("GtkLayout", IsGtkLayout);
_GGAP_REGISTER_TYPE("GtkTextView", IsGtkTextView);
_GGAP_REGISTER_TYPE("GtkFixed", IsGtkFixed);
_GGAP_REGISTER_TYPE("GtkCellView", IsGtkCellView);
_GGAP_REGISTER_TYPE("GtkMisc", IsGtkMisc);
_GGAP_REGISTER_TYPE("GtkArrow", IsGtkArrow);
_GGAP_REGISTER_TYPE("GtkLabel", IsGtkLabel);
_GGAP_REGISTER_TYPE("GtkAccelLabel", IsGtkAccelLabel);
_GGAP_REGISTER_TYPE("GtkEntry", IsGtkEntry);
_GGAP_REGISTER_TYPE("GtkSpinButton", IsGtkSpinButton);
_GGAP_REGISTER_TYPE("GtkCellRenderer", IsGtkCellRenderer);
_GGAP_REGISTER_TYPE("GtkCellRendererProgress", IsGtkCellRendererProgress);
_GGAP_REGISTER_TYPE("GtkCellRendererPixbuf", IsGtkCellRendererPixbuf);
_GGAP_REGISTER_TYPE("GtkCellRendererToggle", IsGtkCellRendererToggle);
_GGAP_REGISTER_TYPE("GtkCellRendererText", IsGtkCellRendererText);
_GGAP_REGISTER_TYPE("GtkCellRendererCombo", IsGtkCellRendererCombo);
_GGAP_REGISTER_TYPE("GtkIconFactory", IsGtkIconFactory);
_GGAP_REGISTER_TYPE("GtkListStore", IsGtkListStore);
_GGAP_REGISTER_TYPE("GtkSettings", IsGtkSettings);
_GGAP_REGISTER_TYPE("GtkTreeStore", IsGtkTreeStore);
_GGAP_REGISTER_TYPE("GtkCellLayout", IsGtkCellLayout);
_GGAP_REGISTER_TYPE("GtkTextTagTable", IsGtkTextTagTable);
end);
