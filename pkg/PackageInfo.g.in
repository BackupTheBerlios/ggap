#############################################################################
##
#W  PackageInfo.g                 ggap package                 Yevgen Muntyan
#W
#Y  Copyright (C) 2004-2006 by Yevgen Muntyan <muntyan@math.tamu.edu>
##
##  This program is free software; you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation; either version 2 of the License, or
##  (at your option) any later version.
##
##  See COPYING file that comes with this distribution.
##
##  @(#)$Id: PackageInfo.g.in,v 1.1 2005/02/23 04:44:16 emuntyan Exp $
##

SetPackageInfo( rec(
  PackageName := "ggap",
  Subtitle := "ggap",
  Version := @GGAP_VERSION@,
  Date := "12/10/2005",

##  URL of the archive(s) of the current package release, but *without*
##  the format extension(s), like '.zoo', which are given next.
##  The archive file name *must be changed* with each version of the archive
##  (and probably somehow contain the package name and version).
##  The paths of the files in the archive must begin with the name of the
##  directory containing the package (in our "example" probably:
##  example/init.g, ...    or  example-1.3/init.g, ...  )
#
#ArchiveURL :=
#          "http://www.math.rwth-aachen.de/~Greg.Gamble/Example/example-1.5",

##  All provided formats as list of file extensions, separated by white
##  space or commas.
##  Currently recognized formats are:
##      .zoo       the (GAP-traditional) zoo-format with "!TEXT!" comments
##                 for text files
##      .tar.gz    the UNIX standard
##      .tar.bz2   compressed with 'bzip2', often smaller than with gzip
##      -win.zip   zip-format for DOS/Windows, text files must have DOS
##                 style line breaks (CRLF)
##
##  In the future we may also provide .deb or .rpm formats which allow
##  a convenient installation and upgrading on Linux systems.
##
# ArchiveFormats := ".zoo", # the others are generated automatically
#ArchiveFormats := ".zoo",

##  If not all of the archive formats mentioned above are provided, these
##  can be produced at the GAP side. Therefore it is necessary to know which
##  files of the package distribution are text files which should be unpacked
##  with operating system specific line breaks. There are the following
##  possibilities to specify the text files:
##
##    - specify below a component 'TextFiles' which is a list of names of the
##      text files, relative to the package root directory (e.g., "lib/bla.g")
##    - specify below a component 'BinaryFiles' as list of names, then all other
##      files are taken as text files.
##    - if no 'TextFiles' or 'BinaryFiles' are given and a .zoo archive is
##      provided, then the files in that archive with a "!TEXT!" comment are
##      taken as text files
##    - otherwise: exactly the files with names matching the regular expression
##      ".*\(\.txt\|\.gi\|\.gd\|\.g\|\.c\|\.h\|\.htm\|\.html\|\.xml\|\.tex\|\.six\|\.bib\|\.tst\|README.*\|INSTALL.*\|Makefile\)"
##      are taken as text files
##
##  (Remark: Just providing a .tar.gz file will often result in useful
##  archives)
##
##  These entries are *optional*.
#TextFiles := ["init.g", ......],
#BinaryFiles := ["doc/manual.dvi", ......],

  Persons := [rec(
    LastName      := "Muntyan",
    FirstNames    := "Yevgen",
    IsAuthor      := true,
    IsMaintainer  := true,
    Email         := "muntyan@math.tamu.edu",
    WWWHome       := "http://www.math.tamu.edu/~muntyan/",
    PostalAddress := "",
    Place         := "College Station, TX, USA",
    Institution   := "Texas A&M University"
  )],

##  Status information. Currently the following cases are recognized:
##    "accepted"      for successfully refereed packages
##    "deposited"     for packages for which the GAP developers agreed
##                    to distribute them with the core GAP system
##    "dev"           for development versions of packages
##    "other"         for all other packages
##
# Status := "accepted",
Status := "other",

##  You must provide the next two entries if and only if the status is
##  "accepted" because is was successfully refereed:
# format: 'name (place)'
# CommunicatedBy := "Mike Atkinson (St. Andrews)",
#CommunicatedBy := "",
# format: mm/yyyy
# AcceptDate := "08/1999",
#AcceptDate := "",

##  For a central overview of all packages and a collection of all package
##  archives it is necessary to have two files accessible which should be
##  contained in each package:
##     - A README file, containing a short abstract about the package
##       content and installation instructions.
##     - The PackageInfo.g file you are currently reading or editing!
##  You must specify URLs for these two files, these allow to automate
##  the updating of package information on the GAP Website, and inclusion
##  and updating of the package in the GAP distribution.
#
#README_URL :=
#  "http://www.math.rwth-aachen.de/~Greg.Gamble/Example/README.example",
#PackageInfoURL :=
#  "http://www.math.rwth-aachen.de/~Greg.Gamble/Example/PackageInfo.g",

##  Here you  must provide a short abstract explaining the package content
##  in HTML format (used on the package overview Web page) and an URL
##  for a Webpage with more detailed information about the package
##  (not more than a few lines, less is ok):
##  Please, use '<span class="pkgname">GAP</span>' and
##  '<span class="pkgname">MyPKG</span>' for specifing package names.
##
# AbstractHTML := "This package provides  a collection of functions for \
# computing the Smith normal form of integer matrices and some related \
# utilities.",
#AbstractHTML :=
#  "The <span class=\"pkgname\">Example</span> package, as its name suggests, \
#   is an example of how to create a <span class=\"pkgname\">GAP</span> \
#   package. It has little functionality except for being a package",

  PackageWWWHome := "http://ggap.sourceforge.net/",

##  Here is the information on the help books of the package, used for
##  loading into GAP's online help and maybe for an online copy of the
##  documentation on the GAP website.
##
##  For the online help the following is needed:
##       - the name of the book (.BookName)
##       - a long title, shown by ?books (.LongTitle, optional)
##       - the path to the manual.six file for this book (.SixFile)
##       - a decision if the book should be (auto)loaded, probably 'true'
##         (.Autoload)
##
##  For an online version on a Web page further entries are needed,
##  if possible, provide an HTML- and a PDF-version:
##      - if there is an HTML-version the path to the start file,
##        relative to the package home directory (.HTMLStart)
##      - if there is a PDF-version the path to the .pdf-file,
##        relative to the package home directory (.PDFFile)
##      - give the paths to the files inside your package directory
##        which are needed for the online manual (either as URL .Archive
##        if you pack them into a separate archive, or as list
##        .ArchiveURLSubset of directory and file names which should be
##        copied from your package archive, given in .ArchiveURL above
##
##  For links to other GAP or package manuals you can assume a relative
##  position of the files as in a standard GAP installation.
##
# in case of several help books give a list of such records here:
#PackageDoc := rec(
#  # use same as in GAP
#  BookName  := "Example",
#  # format/extension can be one of .zoo, .tar.gz, .tar.bz2, -win.zip
#  Archive :=
#      "http://www.math.rwth-aachen.de/~Greg.Gamble/Example/exampledoc-1.5.zoo",
#  ArchiveURLSubset := ["doc", "htm"],
#  HTMLStart := "htm/chapters.htm",
#  PDFFile   := "doc/manual.pdf",
#  # the path to the .six file used by GAP's help system
#  SixFile   := "doc/manual.six",
#  # a longer title of the book, this together with the book name should
#  # fit on a single text line (appears with the '?books' command in GAP)
#  # LongTitle := "Elementary Divisors of Integer Matrices",
#  LongTitle := "",
#  # Should this help book be autoloaded when GAP starts up? This should
#  # usually be 'true', otherwise say 'false'.
#  Autoload  := true
#),

  Dependencies := rec(
    GAP := ">=4.4",
    NeededOtherPackages := [],
    SuggestedOtherPackages := [],
    ExternalConditions := []
  ),

  AvailabilityTest := ReturnTrue,

  BannerString := Concatenation(
  "----------------------------------------------------------------\n",
  "Loading GGAP ", ~.Version, "\n",
  "For help, type: ?ggap \n",
  "----------------------------------------------------------------\n" ),

  Autoload := true,
  TestFile := "tst/demo.g",
));

#E
## kate: space-indent on; indent-width 2;
